name: Nexus Revoluter CI/CD for Pi Network

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  NODE_VERSION: '18'
  SOLIDITY_VERSION: '0.8.24'
  PI_TESTNET_NETWORK: 'pi_testnet'
  PI_MAINNET_NETWORK: 'pi_mainnet'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint scripts/ test/ --ext .js,.ts

      - name: Run Solhint
        run: npx solhint 'contracts/**/*.sol'

  compile:
    name: Compile Smart Contracts
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Compile Contracts
        run: npx hardhat compile
        env:
          REPORT_GAS: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: contract-artifacts
          path: artifacts/
          retention-days: 7

  test:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest
    needs: compile
    strategy:
      matrix:
        node-version: [16, 18, 20]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Hardhat Tests
        run: npx hardhat test

      - name: Generate Coverage Report
        run: npx hardhat coverage
        env:
          COVERAGE: true

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.node-version }}
          path: coverage/
          retention-days: 7

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install Slither
        run: pip install slither-analyzer

      - name: Run Slither Analysis
        run: slither . --exclude-low --exclude-informational
        continue-on-error: true

      - name: Upload Slither Report
        uses: actions/upload-artifact@v4
        with:
          name: slither-report
          path: slither.out
          retention-days: 7

  deploy-testnet:
    name: Deploy to Pi Testnet
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Deploy to Pi Testnet
        run: npx hardhat run scripts/deploy.js --network ${{ env.PI_TESTNET_NETWORK }}
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PI_TESTNET_RPC_URL: ${{ secrets.PI_TESTNET_RPC_URL }}

      - name: Upload Deployment Info
        uses: actions/upload-artifact@v4
        with:
          name: testnet-deployment
          path: deployment.txt
          retention-days: 7

  deploy-mainnet:
    name: Deploy to Pi Mainnet
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Deploy to Pi Mainnet
        run: npx hardhat run scripts/deploy.js --network ${{ env.PI_MAINNET_NETWORK }}
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PI_MAINNET_RPC_URL: ${{ secrets.PI_MAINNET_RPC_URL }}

      - name: Upload Deployment Info
        uses: actions/upload-artifact@v4
        with:
          name: mainnet-deployment
          path: deployment.txt
          retention-days: 7

  notify:
    name: Notify on Success/Failure
    runs-on: ubuntu-latest
    needs: [lint, compile, test, security, deploy-testnet, deploy-mainnet]
    if: always()
    steps:
      - name: Send Discord Notification
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            **Nexus Revoluter CI/CD for Pi Network**
            Status: ${{ job.status }}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
            View: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        if: ${{ secrets.DISCORD_WEBHOOK != '' }}
